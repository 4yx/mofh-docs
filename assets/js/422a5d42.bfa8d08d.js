"use strict"; (self.webpackChunkhtdocs = self.webpackChunkhtdocs || []).push([[483], { 3905: (e, t, n) => { n.d(t, { Zo: () => d, kt: () => p }); var r = n(7294); function o(e, t, n) { return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e } function a(e, t) { var n = Object.keys(e); if (Object.getOwnPropertySymbols) { var r = Object.getOwnPropertySymbols(e); t && (r = r.filter((function (t) { return Object.getOwnPropertyDescriptor(e, t).enumerable }))), n.push.apply(n, r) } return n } function i(e) { for (var t = 1; t < arguments.length; t++) { var n = null != arguments[t] ? arguments[t] : {}; t % 2 ? a(Object(n), !0).forEach((function (t) { o(e, t, n[t]) })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : a(Object(n)).forEach((function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t)) })) } return e } function s(e, t) { if (null == e) return {}; var n, r, o = function (e, t) { if (null == e) return {}; var n, r, o = {}, a = Object.keys(e); for (r = 0; r < a.length; r++)n = a[r], t.indexOf(n) >= 0 || (o[n] = e[n]); return o }(e, t); if (Object.getOwnPropertySymbols) { var a = Object.getOwnPropertySymbols(e); for (r = 0; r < a.length; r++)n = a[r], t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (o[n] = e[n]) } return o } var u = r.createContext({}), l = function (e) { var t = r.useContext(u), n = t; return e && (n = "function" == typeof e ? e(t) : i(i({}, t), e)), n }, d = function (e) { var t = l(e.components); return r.createElement(u.Provider, { value: t }, e.children) }, c = { inlineCode: "code", wrapper: function (e) { var t = e.children; return r.createElement(r.Fragment, {}, t) } }, m = r.forwardRef((function (e, t) { var n = e.components, o = e.mdxType, a = e.originalType, u = e.parentName, d = s(e, ["components", "mdxType", "originalType", "parentName"]), m = l(n), p = o, y = m["".concat(u, ".").concat(p)] || m[p] || c[p] || a; return n ? r.createElement(y, i(i({ ref: t }, d), {}, { components: n })) : r.createElement(y, i({ ref: t }, d)) })); function p(e, t) { var n = arguments, o = t && t.mdxType; if ("string" == typeof e || o) { var a = n.length, i = new Array(a); i[0] = m; var s = {}; for (var u in t) hasOwnProperty.call(t, u) && (s[u] = t[u]); s.originalType = e, s.mdxType = "string" == typeof e ? e : o, i[1] = s; for (var l = 2; l < a; l++)i[l] = n[l]; return r.createElement.apply(null, i) } return r.createElement.apply(null, n) } m.displayName = "MDXCreateElement" }, 4771: (e, t, n) => { n.r(t), n.d(t, { assets: () => u, contentTitle: () => i, default: () => c, frontMatter: () => a, metadata: () => s, toc: () => l }); var r = n(7462), o = (n(7294), n(3905)); const a = { description: "If you want to use your custom domain with PleasantFree, you first need to point the domain to PleasantFree by changing the nameservers at your domain registrar." }, i = "DNS Query Refused", s = { unversionedId: "domains-and-dns/dns-query-refused", id: "domains-and-dns/dns-query-refused", title: "DNS Query Refused", description: "If you want to use your custom domain with PleasantFree, you first need to point the domain to PleasantFree by changing the nameservers at your domain registrar.", source: "@site/docs/domains-and-dns/dns-query-refused.md", sourceDirName: "domains-and-dns", slug: "/domains-and-dns/dns-query-refused", permalink: "/domains-and-dns/dns-query-refused", draft: !1, tags: [], version: "current", frontMatter: { description: "If you want to use your custom domain with PleasantFree, you first need to point the domain to PleasantFree by changing the nameservers at your domain registrar." }, sidebar: "tutorialSidebar", previous: { title: "What Is DNS Propagation", permalink: "/domains-and-dns/dns-propagation" }, next: { title: "Removing An Existing Domain", permalink: "/domains-and-dns/remove-domain" } }, u = {}, l = [{ value: "Any Solution?", id: "any-solution", level: 2 }], d = { toc: l }; function c(e) { let { components: t, ...n } = e; return (0, o.kt)("wrapper", (0, r.Z)({}, d, n, { components: t, mdxType: "MDXLayout" }), (0, o.kt)("h1", { id: "dns-query-refused" }, "DNS Query Refused"), (0, o.kt)("p", null, "If you want to use your custom domain with PleasantFree, you first need to point the domain to PleasantFree by changing the nameservers at your domain registrar. ", (0, o.kt)("a", { parentName: "p", href: "https://docs.pleasantfree.com/domains-and-dns/use-custom-domain" }, "Read More")), (0, o.kt)("p", null, "Some registrars may show an error like this when trying to change the DNS nameservers:"), (0, o.kt)("blockquote", null, (0, o.kt)("p", { parentName: "blockquote" }, "DNS Query Refused")), (0, o.kt)("p", null, "OR"), (0, o.kt)("blockquote", null, (0, o.kt)("p", { parentName: "blockquote" }, "Rejected Search")), (0, o.kt)("p", null, "To fix this in most cases, you need to contact your registrar and tell them that nameservers must be set first before verification."), (0, o.kt)("h1", { id: "culprit-of-this-issue" }, "Culprit Of This Issue?"), (0, o.kt)("p", null, "Whenever you want to add a custom domain to your PleasantFree account, we need to verify the domain, which can be only done by changing the domain nameservers first."), (0, o.kt)("p", null, "Some registrars search for your domain records on the nameservers. This will always fail because we create those DNS records for your domain after verifying your domain name."), (0, o.kt)("h2", { id: "any-solution" }, "Any Solution?"), (0, o.kt)("p", null, "Sorry to break it to you but, we really don\u2019t have an alternate solution to verify your domain name."), (0, o.kt)("p", null, "But, we were indeed able to identify some domain extensions whose registrars do implement these checks."), (0, o.kt)("ul", null, (0, o.kt)("li", { parentName: "ul" }, (0, o.kt)("inlineCode", { parentName: "li" }, ".com.br")), (0, o.kt)("li", { parentName: "ul" }, (0, o.kt)("inlineCode", { parentName: "li" }, ".de")), (0, o.kt)("li", { parentName: "ul" }, (0, o.kt)("inlineCode", { parentName: "li" }, ".dk")), (0, o.kt)("li", { parentName: "ul" }, (0, o.kt)("inlineCode", { parentName: "li" }, ".hu")), (0, o.kt)("li", { parentName: "ul" }, (0, o.kt)("inlineCode", { parentName: "li" }, ".it"))), (0, o.kt)("p", null, "If you have a domain with one of the above domain extensions which you intent to use with PleasantFree, please consider changing the domain extension or getting a refund if you are eligible")) } c.isMDXComponent = !0 } }]);