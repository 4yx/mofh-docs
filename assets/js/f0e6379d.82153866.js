"use strict"; (self.webpackChunkhtdocs = self.webpackChunkhtdocs || []).push([[470], { 3905: function (e, t, n) { n.d(t, { Zo: function () { return c }, kt: function () { return f } }); var r = n(7294); function o(e, t, n) { return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e } function i(e, t) { var n = Object.keys(e); if (Object.getOwnPropertySymbols) { var r = Object.getOwnPropertySymbols(e); t && (r = r.filter((function (t) { return Object.getOwnPropertyDescriptor(e, t).enumerable }))), n.push.apply(n, r) } return n } function a(e) { for (var t = 1; t < arguments.length; t++) { var n = null != arguments[t] ? arguments[t] : {}; t % 2 ? i(Object(n), !0).forEach((function (t) { o(e, t, n[t]) })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : i(Object(n)).forEach((function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t)) })) } return e } function s(e, t) { if (null == e) return {}; var n, r, o = function (e, t) { if (null == e) return {}; var n, r, o = {}, i = Object.keys(e); for (r = 0; r < i.length; r++)n = i[r], t.indexOf(n) >= 0 || (o[n] = e[n]); return o }(e, t); if (Object.getOwnPropertySymbols) { var i = Object.getOwnPropertySymbols(e); for (r = 0; r < i.length; r++)n = i[r], t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (o[n] = e[n]) } return o } var l = r.createContext({}), u = function (e) { var t = r.useContext(l), n = t; return e && (n = "function" == typeof e ? e(t) : a(a({}, t), e)), n }, c = function (e) { var t = u(e.components); return r.createElement(l.Provider, { value: t }, e.children) }, d = { inlineCode: "code", wrapper: function (e) { var t = e.children; return r.createElement(r.Fragment, {}, t) } }, m = r.forwardRef((function (e, t) { var n = e.components, o = e.mdxType, i = e.originalType, l = e.parentName, c = s(e, ["components", "mdxType", "originalType", "parentName"]), m = u(n), f = o, p = m["".concat(l, ".").concat(f)] || m[f] || d[f] || i; return n ? r.createElement(p, a(a({ ref: t }, c), {}, { components: n })) : r.createElement(p, a({ ref: t }, c)) })); function f(e, t) { var n = arguments, o = t && t.mdxType; if ("string" == typeof e || o) { var i = n.length, a = new Array(i); a[0] = m; var s = {}; for (var l in t) hasOwnProperty.call(t, l) && (s[l] = t[l]); s.originalType = e, s.mdxType = "string" == typeof e ? e : o, a[1] = s; for (var u = 2; u < i; u++)a[u] = n[u]; return r.createElement.apply(null, a) } return r.createElement.apply(null, n) } m.displayName = "MDXCreateElement" }, 2634: function (e, t, n) { n.r(t), n.d(t, { assets: function () { return c }, contentTitle: function () { return l }, default: function () { return f }, frontMatter: function () { return s }, metadata: function () { return u }, toc: function () { return d } }); var r = n(7462), o = n(3366), i = (n(7294), n(3905)), a = ["components"], s = { description: "In the most basic sense, an inode is \u201ca data structure that stores information about a file or directory except its name and its actual data\u201d." }, l = "What\u2019s The Inode Limit", u = { unversionedId: "fair-usage-limits/inode-limit", id: "fair-usage-limits/inode-limit", title: "What\u2019s The Inode Limit", description: "In the most basic sense, an inode is \u201ca data structure that stores information about a file or directory except its name and its actual data\u201d.", source: "@site/docs/fair-usage-limits/inode-limit.md", sourceDirName: "fair-usage-limits", slug: "/fair-usage-limits/inode-limit", permalink: "/fair-usage-limits/inode-limit", draft: !1, tags: [], version: "current", frontMatter: { description: "In the most basic sense, an inode is \u201ca data structure that stores information about a file or directory except its name and its actual data\u201d." }, sidebar: "tutorialSidebar", previous: { title: "What's The Hit Limit", permalink: "/fair-usage-limits/hit-limit" }, next: { title: "What's The MySQL Limit", permalink: "/fair-usage-limits/mysql-limit" } }, c = {}, d = [{ value: "Why do I have a limited number of inodes?", id: "why-do-i-have-a-limited-number-of-inodes", level: 2 }, { value: "How can I get more indoes?", id: "how-can-i-get-more-indoes", level: 2 }, { value: "References", id: "references", level: 2 }], m = { toc: d }; function f(e) { var t = e.components, n = (0, o.Z)(e, a); return (0, i.kt)("wrapper", (0, r.Z)({}, m, n, { components: t, mdxType: "MDXLayout" }), (0, i.kt)("h1", { id: "whats-the-inode-limit" }, "What\u2019s The Inode Limit"), (0, i.kt)("p", null, "In the most basic sense, an inode is \u201ca data structure \u2026 that stores \u2026 information about a file ", "[or directory]", ' except its name and its actual data\u201d ("Inode Definition"). This essentially means that an inode represents any one file or any one directory. For example, a file in a directory totals two inodes. This article may contain affiliate links to external websites.'), (0, i.kt)("h2", { id: "why-do-i-have-a-limited-number-of-inodes" }, "Why do I have a limited number of inodes?"), (0, i.kt)("p", null, "We limit the amount of inodes because we need our servers to stay fast, reliable, and free of spam for all of our customers. Currently, all accounts are limited to 30,019 inodes."), (0, i.kt)("h2", { id: "how-can-i-get-more-indoes" }, "How can I get more indoes?"), (0, i.kt)("p", null, "If you require more than 30,019 inodes, please consider ", (0, i.kt)("a", { parentName: "p", href: "https://pleasantfree.com/go/ifastnet" }, "upgrading your account to premium (pleasantfree.com)"), ", where you get many more."), (0, i.kt)("h2", { id: "references" }, "References"), (0, i.kt)("blockquote", null, (0, i.kt)("p", { parentName: "blockquote" }, "\u201cEverything You Need to Know about Inodes - ProFreeHost.\u201d Profreehost.com, <profreehost.com/support/account-management/everything-you-need-to-know-about-inodes>. Accessed 29 Jan. 2022.")), (0, i.kt)("blockquote", null, (0, i.kt)("p", { parentName: "blockquote" }, "\u201cInode Definition by the Linux Information Project (LINFO).\u201d Www.linfo.org, <", (0, i.kt)("a", { parentName: "p", href: "http://www.linfo.org/inode.html%3E" }, "www.linfo.org/inode.html>"), ".")), (0, i.kt)("blockquote", null, (0, i.kt)("p", { parentName: "blockquote" }, "\u201cWhat Is Inode in Linux? Everything You Need to Know.\u201d Linux Handbook, 7 Mar. 2019, <linuxhandbook.com/inode-linux/>."))) } f.isMDXComponent = !0 } }]);