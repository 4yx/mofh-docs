"use strict"; (self.webpackChunkhtdocs = self.webpackChunkhtdocs || []).push([[155], { 3905: function (e, t, n) { n.d(t, { Zo: function () { return c }, kt: function () { return p } }); var r = n(7294); function o(e, t, n) { return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e } function a(e, t) { var n = Object.keys(e); if (Object.getOwnPropertySymbols) { var r = Object.getOwnPropertySymbols(e); t && (r = r.filter((function (t) { return Object.getOwnPropertyDescriptor(e, t).enumerable }))), n.push.apply(n, r) } return n } function i(e) { for (var t = 1; t < arguments.length; t++) { var n = null != arguments[t] ? arguments[t] : {}; t % 2 ? a(Object(n), !0).forEach((function (t) { o(e, t, n[t]) })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : a(Object(n)).forEach((function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t)) })) } return e } function s(e, t) { if (null == e) return {}; var n, r, o = function (e, t) { if (null == e) return {}; var n, r, o = {}, a = Object.keys(e); for (r = 0; r < a.length; r++)n = a[r], t.indexOf(n) >= 0 || (o[n] = e[n]); return o }(e, t); if (Object.getOwnPropertySymbols) { var a = Object.getOwnPropertySymbols(e); for (r = 0; r < a.length; r++)n = a[r], t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (o[n] = e[n]) } return o } var l = r.createContext({}), u = function (e) { var t = r.useContext(l), n = t; return e && (n = "function" == typeof e ? e(t) : i(i({}, t), e)), n }, c = function (e) { var t = u(e.components); return r.createElement(l.Provider, { value: t }, e.children) }, m = { inlineCode: "code", wrapper: function (e) { var t = e.children; return r.createElement(r.Fragment, {}, t) } }, d = r.forwardRef((function (e, t) { var n = e.components, o = e.mdxType, a = e.originalType, l = e.parentName, c = s(e, ["components", "mdxType", "originalType", "parentName"]), d = u(n), p = o, f = d["".concat(l, ".").concat(p)] || d[p] || m[p] || a; return n ? r.createElement(f, i(i({ ref: t }, c), {}, { components: n })) : r.createElement(f, i({ ref: t }, c)) })); function p(e, t) { var n = arguments, o = t && t.mdxType; if ("string" == typeof e || o) { var a = n.length, i = new Array(a); i[0] = d; var s = {}; for (var l in t) hasOwnProperty.call(t, l) && (s[l] = t[l]); s.originalType = e, s.mdxType = "string" == typeof e ? e : o, i[1] = s; for (var u = 2; u < a; u++)i[u] = n[u]; return r.createElement.apply(null, i) } return r.createElement.apply(null, n) } d.displayName = "MDXCreateElement" }, 5982: function (e, t, n) { n.r(t), n.d(t, { assets: function () { return c }, contentTitle: function () { return l }, default: function () { return p }, frontMatter: function () { return s }, metadata: function () { return u }, toc: function () { return m } }); var r = n(7462), o = n(3366), a = (n(7294), n(3905)), i = ["components"], s = {}, l = "What's The MySQL Limit", u = { unversionedId: "fair-usage-limits/mysql-limit", id: "fair-usage-limits/mysql-limit", title: "What's The MySQL Limit", description: "MySQL overloading is one of the limits imposed by PleasantFree to keep our database servers stable and not disturb or break other database accounts.", source: "@site/docs/fair-usage-limits/mysql-limit.md", sourceDirName: "fair-usage-limits", slug: "/fair-usage-limits/mysql-limit", permalink: "/fair-usage-limits/mysql-limit", draft: !1, tags: [], version: "current", frontMatter: {}, sidebar: "tutorialSidebar", previous: { title: "What\u2019s The Inode Limit", permalink: "/fair-usage-limits/inode-limit" }, next: { title: "Your Disk Quota Is Exceeded", permalink: "/files-and-ftp/disk-quota-exceeded" } }, c = {}, m = [{ value: "What Does MySQL Overloading Mean?", id: "what-does-mysql-overloading-mean", level: 2 }, { value: "How Do I Get My Account Back?", id: "how-do-i-get-my-account-back", level: 2 }, { value: "How To Keep The Website Online Even With Overloading?", id: "how-to-keep-the-website-online-even-with-overloading", level: 2 }], d = { toc: m }; function p(e) { var t = e.components, n = (0, o.Z)(e, i); return (0, a.kt)("wrapper", (0, r.Z)({}, d, n, { components: t, mdxType: "MDXLayout" }), (0, a.kt)("h1", { id: "whats-the-mysql-limit" }, "What's The MySQL Limit"), (0, a.kt)("p", null, (0, a.kt)("strong", { parentName: "p" }, "MySQL overloading"), " is one of the limits imposed by PleasantFree to keep our database servers stable and not disturb or break other database accounts."), (0, a.kt)("h2", { id: "what-does-mysql-overloading-mean" }, "What Does MySQL Overloading Mean?"), (0, a.kt)("p", null, "Nearly all dynamic websites use a database to store dynamic data, like posts, comments, login credentials and other important stuff. Your website code can then communicate with the database to create new entries or even delete them (the short word is modifying)!"), (0, a.kt)("p", null, "To keep our database servers up and running at all times, we frequently monitor the load of all accounts on the server. If an account database is found to overload the servers or decrease the performance of other websites, our automated system comes into action and takes down that account."), (0, a.kt)("h2", { id: "how-do-i-get-my-account-back" }, "How Do I Get My Account Back?"), (0, a.kt)("p", null, "You can create a new topic in the Hosting Support category and request a reactivate with your account username, domain name and a valid reason."), (0, a.kt)("h2", { id: "how-to-keep-the-website-online-even-with-overloading" }, "How To Keep The Website Online Even With Overloading?"), (0, a.kt)("p", null, "If your memory usage is still high after performing optimisations, we may take your website down forever or ask you to upgrade to ", (0, a.kt)("a", { parentName: "p", href: "https://pleasantfree.com/go/ifastnet" }, "premium hosting"), "."), (0, a.kt)("p", null, "With premium hosting, the database limits are far to nothing if compared to free hosting. You also get free SSL, Cloudflare, Railgun and CDN on an award-winning platform \u2728")) } p.isMDXComponent = !0 } }]);