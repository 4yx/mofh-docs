"use strict"; (self.webpackChunkhtdocs = self.webpackChunkhtdocs || []).push([[929], { 3905: (e, t, n) => { n.d(t, { Zo: () => d, kt: () => m }); var r = n(7294); function a(e, t, n) { return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e } function o(e, t) { var n = Object.keys(e); if (Object.getOwnPropertySymbols) { var r = Object.getOwnPropertySymbols(e); t && (r = r.filter((function (t) { return Object.getOwnPropertyDescriptor(e, t).enumerable }))), n.push.apply(n, r) } return n } function i(e) { for (var t = 1; t < arguments.length; t++) { var n = null != arguments[t] ? arguments[t] : {}; t % 2 ? o(Object(n), !0).forEach((function (t) { a(e, t, n[t]) })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : o(Object(n)).forEach((function (t) { Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t)) })) } return e } function s(e, t) { if (null == e) return {}; var n, r, a = function (e, t) { if (null == e) return {}; var n, r, a = {}, o = Object.keys(e); for (r = 0; r < o.length; r++)n = o[r], t.indexOf(n) >= 0 || (a[n] = e[n]); return a }(e, t); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); for (r = 0; r < o.length; r++)n = o[r], t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (a[n] = e[n]) } return a } var p = r.createContext({}), c = function (e) { var t = r.useContext(p), n = t; return e && (n = "function" == typeof e ? e(t) : i(i({}, t), e)), n }, d = function (e) { var t = c(e.components); return r.createElement(p.Provider, { value: t }, e.children) }, l = { inlineCode: "code", wrapper: function (e) { var t = e.children; return r.createElement(r.Fragment, {}, t) } }, u = r.forwardRef((function (e, t) { var n = e.components, a = e.mdxType, o = e.originalType, p = e.parentName, d = s(e, ["components", "mdxType", "originalType", "parentName"]), u = c(n), m = a, f = u["".concat(p, ".").concat(m)] || u[m] || l[m] || o; return n ? r.createElement(f, i(i({ ref: t }, d), {}, { components: n })) : r.createElement(f, i({ ref: t }, d)) })); function m(e, t) { var n = arguments, a = t && t.mdxType; if ("string" == typeof e || a) { var o = n.length, i = new Array(o); i[0] = u; var s = {}; for (var p in t) hasOwnProperty.call(t, p) && (s[p] = t[p]); s.originalType = e, s.mdxType = "string" == typeof e ? e : a, i[1] = s; for (var c = 2; c < o; c++)i[c] = n[c]; return r.createElement.apply(null, i) } return r.createElement.apply(null, n) } u.displayName = "MDXCreateElement" }, 9630: (e, t, n) => { n.r(t), n.d(t, { assets: () => p, contentTitle: () => i, default: () => l, frontMatter: () => o, metadata: () => s, toc: () => c }); var r = n(7462), a = (n(7294), n(3905)); const o = { description: "DNS propagation is the time frame it takes for DNS changes to be updated across the Internet." }, i = "What Is DNS Propagation", s = { unversionedId: "domains-and-dns/dns-propagation", id: "domains-and-dns/dns-propagation", title: "What Is DNS Propagation", description: "DNS propagation is the time frame it takes for DNS changes to be updated across the Internet.", source: "@site/docs/domains-and-dns/dns-propagation.md", sourceDirName: "domains-and-dns", slug: "/domains-and-dns/dns-propagation", permalink: "/domains-and-dns/dns-propagation", draft: !1, tags: [], version: "current", frontMatter: { description: "DNS propagation is the time frame it takes for DNS changes to be updated across the Internet." }, sidebar: "tutorialSidebar", previous: { title: "Upgraded Hosting Account", permalink: "/account-management/upgraded-account" }, next: { title: "DNS Query Refused", permalink: "/domains-and-dns/dns-query-refused" } }, p = {}, c = [{ value: "The Problem", id: "the-problem", level: 2 }], d = { toc: c }; function l(e) { let { components: t, ...n } = e; return (0, a.kt)("wrapper", (0, r.Z)({}, d, n, { components: t, mdxType: "MDXLayout" }), (0, a.kt)("h1", { id: "what-is-dns-propagation" }, "What Is DNS Propagation"), (0, a.kt)("p", null, "DNS propagation is the time frame it takes for DNS changes to be updated across the Internet. "), (0, a.kt)("p", null, "A change to a DNS record\u2014for example, changing the IP address defined for a specific hostname\u2014can take up to 72 hours to propagate worldwide, although it typically takes a few hours. "), (0, a.kt)("p", null, "For many modern use cases, these DNS propagation times are inconvenient, or simply unacceptable."), (0, a.kt)("h2", { id: "the-problem" }, "The Problem"), (0, a.kt)("p", null, "The problem with DNS propagation is that it is only as strong as its weakest link. There is a huge, global chain of DNS servers and local DNS resolvers, and as long as one element in the chain insists on retaining its old DNS information, propagation won\u2019t be complete."), (0, a.kt)("p", null, "Propagation is a hard problem, but you\u2019d be surprised\u2014with next-generation DNS infrastructure, DNS propagation time can be reduced from days or hours to just a few seconds. ", (0, a.kt)("a", { parentName: "p", href: "https://ns1.com/resources/dns-propagation" }, "Read More"))) } l.isMDXComponent = !0 } }]);